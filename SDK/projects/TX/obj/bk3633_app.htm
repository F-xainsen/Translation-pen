<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\obj\bk3633_app.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\obj\bk3633_app.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060750: Last Updated: Thu Apr 10 19:34:27 2025
<BR><P>
<H3>Maximum Stack Usage =          0 bytes + Unknown(Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>

<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[4]">DataAbort</a> from vectors.o(SYS_BOOT) referenced from vectors.o(SYS_BOOT)
 <LI><a href="#[7]">FIQ_Handler</a> from vectors.o(SYS_BOOT) referenced from vectors.o(SYS_BOOT)
 <LI><a href="#[6]">IRQ_Handler</a> from vectors.o(SYS_BOOT) referenced from vectors.o(SYS_BOOT)
 <LI><a href="#[3]">PrefetchAbort</a> from vectors.o(SYS_BOOT) referenced from vectors.o(SYS_BOOT)
 <LI><a href="#[2]">SoftwareInterrupt</a> from vectors.o(SYS_BOOT) referenced from vectors.o(SYS_BOOT)
 <LI><a href="#[10]">URB_CLEAR_FEATURE</a> from usb.o(.text) referenced from usb.o(.constdata)
 <LI><a href="#[15]">URB_GET_CONFIGURATION</a> from usb.o(.text) referenced from usb.o(.constdata)
 <LI><a href="#[14]">URB_GET_DESCRIPTOR</a> from usb.o(.text) referenced from usb.o(.constdata)
 <LI><a href="#[17]">URB_GET_INTERFACE</a> from usb.o(.text) referenced from usb.o(.constdata)
 <LI><a href="#[f]">URB_GET_STATUS</a> from usb.o(.text) referenced from usb.o(.constdata)
 <LI><a href="#[11]">URB_NOT_SUPPORT</a> from usb.o(.text) referenced 4 times from usb.o(.constdata)
 <LI><a href="#[13]">URB_SET_ADDRESS</a> from usb.o(.text) referenced from usb.o(.constdata)
 <LI><a href="#[16]">URB_SET_CONFIGURATION</a> from usb.o(.text) referenced from usb.o(.constdata)
 <LI><a href="#[12]">URB_SET_FEATURE</a> from usb.o(.text) referenced from usb.o(.constdata)
 <LI><a href="#[18]">URB_SET_INTERFACE</a> from usb.o(.text) referenced from usb.o(.constdata)
 <LI><a href="#[1]">Undefined</a> from vectors.o(SYS_BOOT) referenced from vectors.o(SYS_BOOT)
 <LI><a href="#[e]">_sputc</a> from printfa.o(i._sputc) referenced from printfa.o(i.__0vsprintf)
 <LI><a href="#[9]">app_gpio_sleep</a> from app.o(.text) referenced from main.o(.text)
 <LI><a href="#[a]">app_timer0_1_int_cb</a> from app.o(.text) referenced 2 times from user_handle.o(.text)
 <LI><a href="#[d]">cpu_24_reduce_voltage_sleep</a> from icu.o(.text) referenced from icu.o(.text)
 <LI><a href="#[b]">cpu_reduce_voltage_sleep</a> from icu.o(.text) referenced from icu.o(.text)
 <LI><a href="#[c]">cpu_usb_reduce_voltage_sleep</a> from icu.o(.text) referenced from icu.o(.text)
 <LI><a href="#[8]">main</a> from main.o(.text) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
 <LI><a href="#[19]">sys_Reset</a> from handlers.o(SYS_BOOT) referenced from vectors.o(SYS_BOOT)
 <LI><a href="#[5]">sys_reserved</a> from vectors.o(SYS_BOOT) referenced from vectors.o(SYS_BOOT)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[19]"></a>sys_Reset</STRONG> (ARM, 0 bytes, Stack size 0 bytes, handlers.o(SYS_BOOT))
<BR><BR>[Calls]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main (via Veneer)
</UL>

<P><STRONG><a name="[1b]"></a>SYSirq_FIQ_Handler</STRONG> (ARM, 16 bytes, Stack size 0 bytes, intc.o(sys_fiq_entry))
<BR><BR>[Calls]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;intc_fiq (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FIQ_Handler
</UL>

<P><STRONG><a name="[1d]"></a>SYSirq_IRQ_Handler</STRONG> (ARM, 16 bytes, Stack size 0 bytes, intc.o(sys_irq_entry))
<BR><BR>[Calls]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;intc_irq (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ_Handler
</UL>

<P><STRONG><a name="[1a]"></a>__main</STRONG> (ARM, 0 bytes, Stack size 0 bytes, entry.o(.ARM.Collect$$$$00000000))

<P><STRONG><a name="[1f]"></a>_main_scatterload</STRONG> (ARM, 0 bytes, Stack size 0 bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload (via BLX)
</UL>

<P><STRONG><a name="[162]"></a>__main_after_scatterload</STRONG> (ARM, 0 bytes, Stack size 0 bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload (via BLX)
</UL>

<P><STRONG><a name="[21]"></a>platform_reset</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, main.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_printf
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cpu_reset
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_disable_irq (via BLX)
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_disable_fiq (via BLX)
</UL>

<P><STRONG><a name="[8]"></a>main</STRONG> (Thumb, 78 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xvr_reg_initial
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_fn24_main
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_init
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_printf
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_clk_switch
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;intc_init
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;icu_init
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_cb_register
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_init
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_init
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_enable_irq (via BLX)
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_enable_fiq (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_Reset (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[27]"></a>intc_init</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, intc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1e]"></a>intc_irq</STRONG> (Thumb, 104 bytes, Stack size 0 bytes, intc.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_isr
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_isr
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_isr
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_isr
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cpu_wakeup
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_isr
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_ISR1
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_ISR0
</UL>
<BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSirq_IRQ_Handler (via BLX)
</UL>

<P><STRONG><a name="[1c]"></a>intc_fiq</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, intc.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_isr
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_isr
</UL>
<BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSirq_FIQ_Handler (via BLX)
</UL>

<P><STRONG><a name="[171]"></a>Undefined_Exception</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, intc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Undefined (via Veneer)
</UL>

<P><STRONG><a name="[172]"></a>SoftwareInterrupt_Exception</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, intc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoftwareInterrupt (via Veneer)
</UL>

<P><STRONG><a name="[173]"></a>PrefetchAbort_Exception</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, intc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrefetchAbort (via Veneer)
</UL>

<P><STRONG><a name="[174]"></a>DataAbort_Exception</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, intc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataAbort (via Veneer)
</UL>

<P><STRONG><a name="[175]"></a>Reserved_Exception</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, intc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_reserved (via Veneer)
</UL>

<P><STRONG><a name="[3c]"></a>app_mouse_wheel_scan</STRONG> (Thumb, 146 bytes, Stack size 0 bytes, app.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_get_input
</UL>
<BR>[Called By]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;application_normal_mode
</UL>

<P><STRONG><a name="[3e]"></a>app_mouse_key_scan</STRONG> (Thumb, 170 bytes, Stack size 0 bytes, app.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_get_input
</UL>
<BR>[Called By]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;application_test_mode
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;application_page_mode
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;application_normal_mode
</UL>

<P><STRONG><a name="[110]"></a>app_mouse_key_check</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, app.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;application_normal_mode
</UL>

<P><STRONG><a name="[9]"></a>app_gpio_sleep</STRONG> (Thumb, 106 bytes, Stack size 0 bytes, app.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_set_int_mode
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_get_input
</UL>
<BR>[Called By]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;application_PCBA_mode
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(.text)
</UL>
<P><STRONG><a name="[40]"></a>driver_timer0_reset</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, app.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer0_Stop
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer0_1m5_Start
</UL>
<BR>[Called By]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;driver_rf_data_retrans
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;driver_rf_data_send
</UL>

<P><STRONG><a name="[105]"></a>driver_delay_set_with_base_tick</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, app.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;application_mouse_led_process
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;application_mouse_sleep_check
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;application_mouse_led_start
</UL>

<P><STRONG><a name="[44]"></a>driver_delay_with_base_tick_expire_check</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, app.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;application_mouse_led_process
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;application_mouse_sleep_check
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wait_Xms
</UL>

<P><STRONG><a name="[43]"></a>Wait_Xms</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, app.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;driver_delay_with_base_tick_expire_check
</UL>

<P><STRONG><a name="[a]"></a>app_timer0_1_int_cb</STRONG> (Thumb, 730 bytes, Stack size 0 bytes, app.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_set
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_get_input
</UL>
<BR>[Address Reference Count : 2]<UL><LI> user_handle.o(.text)
<LI> application_main.o(.text)
</UL>
<P><STRONG><a name="[46]"></a>rwip_aes_encrypt</STRONG> (Thumb, 152 bytes, Stack size 0 bytes, aes.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_aes_test
</UL>

<P><STRONG><a name="[3a]"></a>rwip_isr</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, aes.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;intc_fiq
</UL>

<P><STRONG><a name="[48]"></a>app_aes_test</STRONG> (Thumb, 264 bytes, Stack size 0 bytes, aes.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_aes_encrypt
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_printf
</UL>

<P><STRONG><a name="[49]"></a>user_application_initial</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, user_handle.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_cb_register
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fReadRFAddr
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f24Init
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_Initial
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer0_Start
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_fn24_main
</UL>

<P><STRONG><a name="[4f]"></a>user_rf_receive_set</STRONG> (Thumb, 138 bytes, Stack size 0 bytes, user_handle.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcpy_2461
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_read_data
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;driver_rf_ouput_power_value_set
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SwitchToTxMode
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_ms
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_application_normal_mode
</UL>

<P><STRONG><a name="[55]"></a>user_rf_receive_package</STRONG> (Thumb, 68 bytes, Stack size 0 bytes, user_handle.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;R_RX_PAYLOAD
</UL>
<BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_application_normal_mode
</UL>

<P><STRONG><a name="[57]"></a>send_action</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, user_handle.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;driver_rf_data_send_ACK
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SwitchToTxMode
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SwitchToRxMode
</UL>
<BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_short_release_handler
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_long_release_handler
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_long_press_handler
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_short_press_handler
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_application_normal_mode
</UL>

<P><STRONG><a name="[5a]"></a>mouse_send</STRONG> (Thumb, 84 bytes, Stack size 0 bytes, user_handle.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;driver_rf_data_send_ACK
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SwitchToTxMode
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SwitchToRxMode
</UL>
<BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_application_normal_mode
</UL>

<P><STRONG><a name="[5b]"></a>jump_frequency</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, user_handle.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_ms
</UL>
<BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_application_page_mode
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_application_normal_mode
</UL>

<P><STRONG><a name="[5d]"></a>receive_action</STRONG> (Thumb, 254 bytes, Stack size 0 bytes, user_handle.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_set
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_application_normal_mode
</UL>

<P><STRONG><a name="[60]"></a>user_application_normal_mode</STRONG> (Thumb, 622 bytes, Stack size 0 bytes, user_handle.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mouse
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_loop
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;driver_rf_data_send_ACK
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SwitchToTxMode
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SwitchToRxMode
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_ms
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;receive_action
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jump_frequency
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mouse_send
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_action
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_rf_receive_package
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_rf_receive_set
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_fn24_main
</UL>

<P><STRONG><a name="[63]"></a>user_rf_receive_page_set</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, user_handle.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;driver_rf_ouput_power_value_set
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SwitchToRxMode
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_ms
</UL>

<P><STRONG><a name="[64]"></a>user_application_page_mode</STRONG> (Thumb, 772 bytes, Stack size 0 bytes, user_handle.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcpy_2461
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write_some_data
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_read_data
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f24GetFreqConfigValue
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;driver_rf_receive_package
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;driver_rf_ouput_power_value_set
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;driver_rf_data_send_ACK
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SwitchToTxMode
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SwitchToRxMode
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_ms
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jump_frequency
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_set
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_printf
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_init
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_fn24_main
</UL>

<P><STRONG><a name="[31]"></a>user_fn24_main</STRONG> (Thumb, 592 bytes, Stack size 0 bytes, user_handle.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xvr_reg_initial_24
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mouse_init
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_config
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_application_page_mode
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_application_normal_mode
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_application_initial
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_set
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[6b]"></a>bat_check</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, user_handle.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_get_value
</UL>

<P><STRONG><a name="[6d]"></a>key_short_press_handler</STRONG> (Thumb, 88 bytes, Stack size 0 bytes, app_key.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8 (via BLX)
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_action
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_set
</UL>
<BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_press
</UL>

<P><STRONG><a name="[6f]"></a>key_long_press_handler</STRONG> (Thumb, 66 bytes, Stack size 0 bytes, app_key.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8 (via BLX)
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_action
</UL>
<BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_press
</UL>

<P><STRONG><a name="[70]"></a>key_long_release_handler</STRONG> (Thumb, 68 bytes, Stack size 0 bytes, app_key.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8 (via BLX)
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_action
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_set
</UL>
<BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_release
</UL>

<P><STRONG><a name="[71]"></a>key_short_release_handler</STRONG> (Thumb, 76 bytes, Stack size 0 bytes, app_key.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8 (via BLX)
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_action
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_set
</UL>
<BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_release
</UL>

<P><STRONG><a name="[72]"></a>key_press</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, app_key.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_long_press_handler
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_short_press_handler
</UL>
<BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_count
</UL>

<P><STRONG><a name="[73]"></a>key_release</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, app_key.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_short_release_handler
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_long_release_handler
</UL>
<BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_count
</UL>

<P><STRONG><a name="[74]"></a>key_count</STRONG> (Thumb, 126 bytes, Stack size 0 bytes, app_key.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_release
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_press
</UL>
<BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_loop
</UL>

<P><STRONG><a name="[61]"></a>key_loop</STRONG> (Thumb, 226 bytes, Stack size 0 bytes, app_key.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_count
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_set
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_get_input
</UL>
<BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_application_normal_mode
</UL>

<P><STRONG><a name="[75]"></a>read_sensor_data</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, app_gyroscope.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_read
</UL>

<P><STRONG><a name="[77]"></a>write_sensor_data</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, app_gyroscope.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_write
</UL>
<BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mouse_init
</UL>

<P><STRONG><a name="[79]"></a>get_gyro_data</STRONG> (Thumb, 92 bytes, Stack size 0 bytes, app_gyroscope.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_read
</UL>
<BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;imu_final_data_get
</UL>

<P><STRONG><a name="[7a]"></a>raw_to_physical</STRONG> (Thumb, 134 bytes, Stack size 0 bytes, app_gyroscope.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbnf
</UL>
<BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;imu_final_data_get
</UL>

<P><STRONG><a name="[7e]"></a>calculate_displacement</STRONG> (Thumb, 72 bytes, Stack size 0 bytes, app_gyroscope.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mouse
</UL>

<P><STRONG><a name="[81]"></a>common_sin_val_calculate</STRONG> (Thumb, 106 bytes, Stack size 0 bytes, app_gyroscope.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rotate_point
</UL>

<P><STRONG><a name="[83]"></a>common_cos_val_calculate</STRONG> (Thumb, 106 bytes, Stack size 0 bytes, app_gyroscope.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rotate_point
</UL>

<P><STRONG><a name="[84]"></a>rotate_point</STRONG> (Thumb, 172 bytes, Stack size 0 bytes, app_gyroscope.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;common_cos_val_calculate
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;common_sin_val_calculate
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
</UL>
<BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mouse
</UL>

<P><STRONG><a name="[8c]"></a>Filter_threshold</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, app_gyroscope.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;imu_final_data_get
</UL>

<P><STRONG><a name="[8a]"></a>window_filter</STRONG> (Thumb, 70 bytes, Stack size 0 bytes, app_gyroscope.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;imu_final_data_get
</UL>

<P><STRONG><a name="[8b]"></a>imu_final_data_get</STRONG> (Thumb, 130 bytes, Stack size 0 bytes, app_gyroscope.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_filter
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Filter_threshold
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;raw_to_physical
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_gyro_data
</UL>
<BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mouse
</UL>

<P><STRONG><a name="[8f]"></a>kalmanFilter</STRONG> (Thumb, 84 bytes, Stack size 0 bytes, app_gyroscope.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mouse
</UL>

<P><STRONG><a name="[91]"></a>algorithm</STRONG> (Thumb, 1214 bytes, Stack size 0 bytes, app_gyroscope.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan2f (via BLX)
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;asinf (via BLX)
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_frsub
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbnf
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;invSqrt
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mouse
</UL>

<P><STRONG><a name="[95]"></a>calculate_acc_angle</STRONG> (Thumb, 176 bytes, Stack size 0 bytes, app_gyroscope.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mouse
</UL>

<P><STRONG><a name="[6a]"></a>mouse_init</STRONG> (Thumb, 64 bytes, Stack size 0 bytes, app_gyroscope.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_init
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_sensor_data
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_config
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_fn24_main
</UL>

<P><STRONG><a name="[62]"></a>mouse</STRONG> (Thumb, 420 bytes, Stack size 0 bytes, app_gyroscope.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calculate_acc_angle
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;algorithm
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kalmanFilter
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;imu_final_data_get
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rotate_point
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calculate_displacement
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
</UL>
<BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_application_normal_mode
</UL>

<P><STRONG><a name="[a4]"></a>set_flash_info</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, flash.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_advance_init
</UL>

<P><STRONG><a name="[a7]"></a>set_flash_clk</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, flash.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cpu_24_wakeup
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cpu_24_reduce_voltage_sleep
<LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cpu_usb_reduce_voltage_sleep
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_init
</UL>

<P><STRONG><a name="[9c]"></a>get_flash_ID</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, flash.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_erase
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_advance_init
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write_sr_temp
</UL>

<P><STRONG><a name="[9e]"></a>flash_read_sr</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, flash.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_wp_none
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_wp_all
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_wp_496k
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_wp_256k
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write_sr
</UL>

<P><STRONG><a name="[9b]"></a>flash_write_sr_temp</STRONG> (Thumb, 190 bytes, Stack size 0 bytes, flash.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_flash_ID
</UL>
<BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write_sr
</UL>

<P><STRONG><a name="[9d]"></a>flash_write_sr</STRONG> (Thumb, 152 bytes, Stack size 0 bytes, flash.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write_sr_temp
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_read_sr
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_printf
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cpu_reset
</UL>
<BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_wp_none
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_wp_all
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_wp_496k
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_wp_256k
</UL>

<P><STRONG><a name="[9f]"></a>flash_wp_256k</STRONG> (Thumb, 110 bytes, Stack size 0 bytes, flash.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write_sr
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_read_sr
</UL>
<BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write_data
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_erase_sector
</UL>

<P><STRONG><a name="[a0]"></a>flash_wp_496k</STRONG> (Thumb, 118 bytes, Stack size 0 bytes, flash.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write_sr
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_read_sr
</UL>
<BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write_data
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_erase_sector
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write_some_data
</UL>

<P><STRONG><a name="[a1]"></a>flash_wp_all</STRONG> (Thumb, 110 bytes, Stack size 0 bytes, flash.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write_sr
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_read_sr
</UL>
<BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write_data
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_erase_sector
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_advance_init
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write_some_data
</UL>

<P><STRONG><a name="[a2]"></a>flash_wp_none</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, flash.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write_sr
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_read_sr
</UL>
<BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write_data
</UL>

<P><STRONG><a name="[a3]"></a>flash_advance_init</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, flash.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_wp_all
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_flash_ID
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_flash_info
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_init
</UL>

<P><STRONG><a name="[a6]"></a>clr_flash_qwfr</STRONG> (Thumb, 222 bytes, Stack size 0 bytes, flash.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_set_dual_mode
</UL>

<P><STRONG><a name="[a5]"></a>flash_set_dual_mode</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, flash.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clr_flash_qwfr
</UL>
<BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_init
</UL>

<P><STRONG><a name="[2a]"></a>flash_init</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, flash.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_set_dual_mode
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_advance_init
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_flash_clk
</UL>
<BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_application_page_mode
<LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[a8]"></a>flash_erase_sector</STRONG> (Thumb, 92 bytes, Stack size 0 bytes, flash.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_wp_all
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_wp_496k
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_wp_256k
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_enable_irq (via BLX)
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_enable_fiq (via BLX)
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_disable_irq (via BLX)
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_disable_fiq (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_erase
</UL>

<P><STRONG><a name="[50]"></a>flash_read_data</STRONG> (Thumb, 156 bytes, Stack size 0 bytes, flash.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_enable_irq (via BLX)
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_enable_fiq (via BLX)
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_disable_irq (via BLX)
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_disable_fiq (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_read
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write_data
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_application_page_mode
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_rf_receive_set
</UL>

<P><STRONG><a name="[a9]"></a>flash_write_data</STRONG> (Thumb, 304 bytes, Stack size 0 bytes, flash.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_wp_none
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_wp_all
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_wp_496k
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_wp_256k
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_read_data
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_enable_irq (via BLX)
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_enable_fiq (via BLX)
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_disable_irq (via BLX)
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_disable_fiq (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write
</UL>

<P><STRONG><a name="[ab]"></a>flash_read</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, flash.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_read_data
</UL>
<BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_test
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write_some_data
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fReadRFAddr
</UL>

<P><STRONG><a name="[ac]"></a>flash_write</STRONG> (Thumb, 102 bytes, Stack size 0 bytes, flash.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write_data
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_flash_ID
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_test
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write_some_data
</UL>

<P><STRONG><a name="[ad]"></a>flash_erase</STRONG> (Thumb, 90 bytes, Stack size 0 bytes, flash.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_erase_sector
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_flash_ID
</UL>
<BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_test
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write_some_data
</UL>

<P><STRONG><a name="[66]"></a>flash_write_some_data</STRONG> (Thumb, 96 bytes, Stack size 0 bytes, flash.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_erase
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_read
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_wp_all
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_wp_496k
</UL>
<BR>[Called By]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;application_page_mode
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_application_page_mode
</UL>

<P><STRONG><a name="[ae]"></a>flash_test</STRONG> (Thumb, 252 bytes, Stack size 0 bytes, flash.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_erase
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_read
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_printf
</UL>

<P><STRONG><a name="[54]"></a>Delay_ms</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, rf_xvr_24.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_suspend_wakeup
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;application_page_mode
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;application_PCBA_mode
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resync
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF250_calibration
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmod_calibration
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK32K_AutoCali_init
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pll_clk_calibration
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_application_page_mode
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_rf_receive_page_set
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_application_normal_mode
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jump_frequency
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_rf_receive_set
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xvr_reg_initial
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_clk_switch
</UL>

<P><STRONG><a name="[af]"></a>pll_clk_calibration</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, rf_xvr_24.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_ms
</UL>
<BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xvr_reg_initial
</UL>

<P><STRONG><a name="[68]"></a>xvr_reg_initial_24</STRONG> (Thumb, 62 bytes, Stack size 0 bytes, rf_xvr_24.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fn24main
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_fn24_main
</UL>

<P><STRONG><a name="[b0]"></a>CLK32K_AutoCali_init</STRONG> (Thumb, 72 bytes, Stack size 0 bytes, rf_xvr_24.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_ms
</UL>
<BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xvr_reg_initial
</UL>

<P><STRONG><a name="[b1]"></a>kmod_calibration</STRONG> (Thumb, 254 bytes, Stack size 0 bytes, rf_xvr_24.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_ms
</UL>
<BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xvr_reg_initial
</UL>

<P><STRONG><a name="[b2]"></a>xtal_cal_set</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, rf_xvr_24.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xvr_reg_initial
</UL>

<P><STRONG><a name="[2b]"></a>xvr_reg_initial</STRONG> (Thumb, 394 bytes, Stack size 0 bytes, rf_xvr_24.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xtal_cal_set
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmod_calibration
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK32K_AutoCali_init
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pll_clk_calibration
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_ms
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[b6]"></a>Delay_us</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, rf_xvr_24.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;driver_rf_data_retrans
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;driver_rf_data_send
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;application_mouse_rf_send
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;application_mouse_channel_search
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;general_dongle_search
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;application_test_mode
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;application_page_mode
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;application_PCBA_mode
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sensor_3205_check
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;driver_sensor_paw3204_cpi_set_value
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resync1
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calib_adc
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_get_value
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cpu_wakeup
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cpu_reset
</UL>

<P><STRONG><a name="[152]"></a>Delay</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, rf_xvr_24.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_suspend_wakeup
</UL>

<P><STRONG><a name="[b3]"></a>RF250_calibration</STRONG> (Thumb, 754 bytes, Stack size 0 bytes, rf_xvr_24.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_ms
</UL>

<P><STRONG><a name="[69]"></a>gpio_config</STRONG> (Thumb, 84 bytes, Stack size 0 bytes, gpio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcba_test_init
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;driver_sensor_paw3204_spi_init
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_init
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_deinit
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;test_reset_reason
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;deep_sleep_wakeup_set
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_init
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mouse_init
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_fn24_main
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_init
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_init
</UL>

<P><STRONG><a name="[3d]"></a>gpio_get_input</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, gpio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;REC_OneByte
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;application_mouse_rf_send
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_set_24page_timer
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_loop
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer0_1_int_cb
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mouse_key_scan
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mouse_wheel_scan
<LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gpio_sleep
</UL>

<P><STRONG><a name="[45]"></a>gpio_set</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, gpio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcba_test_init
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_Toggle
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;application_PCBA_mode
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_Ctrl
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resync1
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resync
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;driver_sensor_paw3204_spi_init
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_triger
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_short_release_handler
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_long_release_handler
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_short_press_handler
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_loop
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_application_page_mode
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;receive_action
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer0_1_int_cb
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_fn24_main
</UL>

<P><STRONG><a name="[3f]"></a>gpio_set_int_mode</STRONG> (Thumb, 86 bytes, Stack size 0 bytes, gpio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_wakeup_config
<LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gpio_sleep
</UL>

<P><STRONG><a name="[29]"></a>gpio_init</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gpio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[b4]"></a>gpio_triger</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, gpio.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_set
</UL>

<P><STRONG><a name="[2e]"></a>gpio_cb_register</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gpio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[36]"></a>gpio_isr</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, gpio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;intc_irq
</UL>

<P><STRONG><a name="[b5]"></a>gpio_wakeup_config</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gpio.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_set_int_mode
</UL>
<BR>[Called By]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;deep_sleep_wakeup_set
</UL>

<P><STRONG><a name="[26]"></a>icu_init</STRONG> (Thumb, 86 bytes, Stack size 0 bytes, icu.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[cd]"></a>icu_set_sleep_mode</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, icu.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_rx_cmd_handler
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_rx_cmd_handler
</UL>

<P><STRONG><a name="[b]"></a>cpu_reduce_voltage_sleep</STRONG> (Thumb, 158 bytes, Stack size 0 bytes, icu.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;application_PCBA_mode
</UL>
<BR>[Address Reference Count : 1]<UL><LI> icu.o(.text)
</UL>
<P><STRONG><a name="[32]"></a>cpu_wakeup</STRONG> (Thumb, 82 bytes, Stack size 0 bytes, icu.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_us
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8 (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;intc_irq
</UL>

<P><STRONG><a name="[108]"></a>cpu_idle_sleep</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, icu.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;application_mouse_idle_oscxmhz
</UL>

<P><STRONG><a name="[2c]"></a>mcu_clk_switch</STRONG> (Thumb, 278 bytes, Stack size 0 bytes, icu.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8 (via BLX)
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_ms
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[b7]"></a>deep_sleep_wakeup_set</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, icu.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_wakeup_config
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_config
</UL>
<BR>[Called By]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;test_reset_reason
</UL>

<P><STRONG><a name="[ba]"></a>cpu_delay</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, icu.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;deep_sleep
</UL>

<P><STRONG><a name="[b8]"></a>system_set_reset_reson</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, icu.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;deep_sleep
</UL>

<P><STRONG><a name="[b9]"></a>deep_sleep</STRONG> (Thumb, 86 bytes, Stack size 0 bytes, icu.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_set_reset_reson
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cpu_delay
</UL>
<BR>[Called By]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;test_reset_reason
</UL>

<P><STRONG><a name="[25]"></a>cpu_reset</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, icu.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_rx_cmd_handler
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_rx_cmd_handler
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_low_volt_sleep
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write_sr
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_reset
</UL>

<P><STRONG><a name="[bb]"></a>system_reset_reson</STRONG> (Thumb, 150 bytes, Stack size 0 bytes, icu.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_printf
</UL>

<P><STRONG><a name="[bc]"></a>test_reset_reason</STRONG> (Thumb, 278 bytes, Stack size 0 bytes, icu.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;deep_sleep
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;deep_sleep_wakeup_set
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_config
</UL>

<P><STRONG><a name="[bd]"></a>rw_sleep</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, icu.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cpu_24_reduce_voltage_sleep
<LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cpu_usb_reduce_voltage_sleep
</UL>

<P><STRONG><a name="[be]"></a>rw_wakeup</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, icu.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cpu_24_reduce_voltage_sleep
</UL>

<P><STRONG><a name="[c]"></a>cpu_usb_reduce_voltage_sleep</STRONG> (Thumb, 154 bytes, Stack size 0 bytes, icu.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rw_sleep
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_flash_clk
</UL>
<BR>[Address Reference Count : 1]<UL><LI> icu.o(.text)
</UL>
<P><STRONG><a name="[d]"></a>cpu_24_reduce_voltage_sleep</STRONG> (Thumb, 132 bytes, Stack size 0 bytes, icu.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rw_wakeup
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rw_sleep
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_flash_clk
</UL>
<BR>[Address Reference Count : 1]<UL><LI> icu.o(.text)
</UL>
<P><STRONG><a name="[bf]"></a>cpu_24_wakeup</STRONG> (Thumb, 106 bytes, Stack size 0 bytes, icu.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_flash_clk
</UL>

<P><STRONG><a name="[115]"></a>wdt_disable</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, wdt.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;application_test_mode
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;application_PCBA_mode
</UL>

<P><STRONG><a name="[2d]"></a>adc_init</STRONG> (Thumb, 98 bytes, Stack size 0 bytes, adc.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_config
</UL>
<BR>[Called By]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;application_normal_mode_initial
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_temperature_value
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_low_volt_sleep
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calib_adc
<LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[c0]"></a>adc_deinit</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, adc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_config
</UL>
<BR>[Called By]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;application_PCBA_mode
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_temperature_value
</UL>

<P><STRONG><a name="[35]"></a>adc_isr</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, adc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;intc_irq
</UL>

<P><STRONG><a name="[6c]"></a>adc_get_value</STRONG> (Thumb, 88 bytes, Stack size 0 bytes, adc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;driver_lbd_process
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_temperature_value
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_low_volt_sleep
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calib_adc
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bat_check
</UL>

<P><STRONG><a name="[c1]"></a>calib_adc</STRONG> (Thumb, 104 bytes, Stack size 0 bytes, adc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_us
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_get_value
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_printf
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_init
</UL>

<P><STRONG><a name="[c2]"></a>check_low_volt_sleep</STRONG> (Thumb, 132 bytes, Stack size 0 bytes, adc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_get_value
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_printf
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cpu_reset
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_init
</UL>

<P><STRONG><a name="[c5]"></a>get_temperature_value</STRONG> (Thumb, 74 bytes, Stack size 0 bytes, adc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_deinit
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_get_value
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_init
</UL>

<P><STRONG><a name="[c6]"></a>uart2_init</STRONG> (Thumb, 84 bytes, Stack size 0 bytes, uart2.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_config
</UL>

<P><STRONG><a name="[cb]"></a>uart2_send</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, uart2.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_rx_cmd_respone
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_printf
</UL>

<P><STRONG><a name="[c7]"></a>clear_uart2_buffer</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, uart2.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[c9]"></a>uart2_printf</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, uart2.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vsprintf
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_send
</UL>
<BR>[Called By]<UL><LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_device
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_config_endp
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_build_pipTxBuf
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_build_pipRxBuf
</UL>

<P><STRONG><a name="[cc]"></a>uart2_rx_cmd_handler</STRONG> (Thumb, 78 bytes, Stack size 0 bytes, uart2.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;icu_set_sleep_mode
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cpu_reset
</UL>
<BR>[Called By]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_rx_handler
</UL>

<P><STRONG><a name="[ce]"></a>uart2_rx_handler</STRONG> (Thumb, 96 bytes, Stack size 0 bytes, uart2.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_rx_cmd_handler
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8 (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_isr
</UL>

<P><STRONG><a name="[34]"></a>uart2_isr</STRONG> (Thumb, 68 bytes, Stack size 0 bytes, uart2.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_rx_handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;intc_irq
</UL>

<P><STRONG><a name="[cf]"></a>uart2_rx_cmd_respone</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, uart2.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_send
</UL>

<P><STRONG><a name="[28]"></a>uart_init</STRONG> (Thumb, 104 bytes, Stack size 0 bytes, uart.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_config
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[d0]"></a>uart_send</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, uart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_rx_cmd_respone
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf_dut
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_printf
</UL>

<P><STRONG><a name="[22]"></a>uart0_printf</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, uart.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vsprintf
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_send
</UL>
<BR>[Called By]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_usb_suspendmode
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;driver_rf_data_send
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;application_mouse_rf_send
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;driver_lbd_process
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;application_page_key_check
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;application_mouse_sleep_check
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;application_normal_mode_initial
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;application_mouse_channel_search
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;general_dongle_search
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;application_test_mode
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;application_page_mode
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;application_normal_mode
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fn24main
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_set_24page_timer
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_send_addr
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart1_dma_read
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart1_dma_write
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart1_dma_isr_callback
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_low_volt_sleep
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calib_adc
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_reset_reson
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_set_reset_reson
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_test
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_advance_init
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write_sr
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calculate_acc_angle
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;algorithm
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fReadRFAddr
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_application_page_mode
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_application_normal_mode
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;receive_action
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_rf_receive_set
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_aes_test
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_isr
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_reset
<LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[d1]"></a>uart_printf_dut</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, uart.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vsprintf
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_send
</UL>

<P><STRONG><a name="[d2]"></a>uart_rx_cmd_handler</STRONG> (Thumb, 88 bytes, Stack size 0 bytes, uart.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;icu_set_sleep_mode
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cpu_reset
</UL>
<BR>[Called By]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_rx_handler
</UL>

<P><STRONG><a name="[d3]"></a>uart_rx_handler</STRONG> (Thumb, 96 bytes, Stack size 0 bytes, uart.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_rx_cmd_handler
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8 (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_isr
</UL>

<P><STRONG><a name="[33]"></a>uart_isr</STRONG> (Thumb, 82 bytes, Stack size 0 bytes, uart.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_rx_handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;intc_irq
</UL>

<P><STRONG><a name="[d4]"></a>uart_rx_cmd_respone</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, uart.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_send
</UL>

<P><STRONG><a name="[d5]"></a>uart1_dma_isr_callback</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, uart.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_isr
</UL>

<P><STRONG><a name="[d6]"></a>uart1_dma_write</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, uart.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_config_write
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_printf
</UL>

<P><STRONG><a name="[d8]"></a>uart1_dma_read</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, uart.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_config_read
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_printf
</UL>

<P><STRONG><a name="[78]"></a>i2c_write</STRONG> (Thumb, 88 bytes, Stack size 0 bytes, i2c.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_i2c_busy
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_msg_reset
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_msg_init
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_send_start
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_sensor_data
</UL>

<P><STRONG><a name="[76]"></a>i2c_read</STRONG> (Thumb, 114 bytes, Stack size 0 bytes, i2c.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_get_last_msg
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_i2c_busy
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_msg_reset
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_msg_init
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_send_start
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_gyro_data
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_sensor_data
</UL>

<P><STRONG><a name="[96]"></a>i2c_init</STRONG> (Thumb, 164 bytes, Stack size 0 bytes, i2c.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_msg_reset
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_config
</UL>
<BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mouse_init
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_isr
</UL>

<P><STRONG><a name="[37]"></a>i2c_isr</STRONG> (Thumb, 982 bytes, Stack size 0 bytes, i2c.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_init
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;intc_irq
</UL>

<P><STRONG><a name="[d7]"></a>dma_config_write</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, dma.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart1_dma_write
</UL>

<P><STRONG><a name="[d9]"></a>dma_config_read</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, dma.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart1_dma_read
</UL>

<P><STRONG><a name="[3b]"></a>dma_isr</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, dma.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart1_dma_isr_callback
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;intc_fiq
</UL>

<P><STRONG><a name="[4e]"></a>timer_cb_register</STRONG> (Thumb, 82 bytes, Stack size 0 bytes, driver_timer.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;application_initial
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_application_initial
</UL>

<P><STRONG><a name="[4c]"></a>Timer_Initial</STRONG> (Thumb, 88 bytes, Stack size 0 bytes, driver_timer.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;application_initial
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_application_initial
</UL>

<P><STRONG><a name="[4d]"></a>Timer0_Start</STRONG> (Thumb, 104 bytes, Stack size 0 bytes, driver_timer.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcba_test_init
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;application_initial
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_application_initial
</UL>

<P><STRONG><a name="[42]"></a>Timer0_1m5_Start</STRONG> (Thumb, 84 bytes, Stack size 0 bytes, driver_timer.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;driver_timer0_reset
</UL>

<P><STRONG><a name="[e0]"></a>Timer1_Start</STRONG> (Thumb, 100 bytes, Stack size 0 bytes, driver_timer.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>

<P><STRONG><a name="[e1]"></a>Timer1_ReStart</STRONG> (Thumb, 82 bytes, Stack size 0 bytes, driver_timer.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>

<P><STRONG><a name="[41]"></a>Timer0_Stop</STRONG> (Thumb, 64 bytes, Stack size 0 bytes, driver_timer.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcba_test_init
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;application_PCBA_mode
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;driver_timer0_reset
</UL>

<P><STRONG><a name="[38]"></a>Timer_ISR0</STRONG> (Thumb, 84 bytes, Stack size 0 bytes, driver_timer.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;intc_irq
</UL>

<P><STRONG><a name="[39]"></a>Timer_ISR1</STRONG> (Thumb, 84 bytes, Stack size 0 bytes, driver_timer.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;intc_irq
</UL>

<P><STRONG><a name="[e2]"></a>driver_sensor_paw3204_spi_init</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, driver_sensor.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_config
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_set
</UL>
<BR>[Called By]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sensor_init
</UL>

<P><STRONG><a name="[e4]"></a>driver_sensor_paw3204_send_byte</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, driver_sensor.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;driver_sensor_paw3204_send_data
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;driver_sensor_paw3204_read_data
</UL>

<P><STRONG><a name="[e5]"></a>driver_sensor_paw3204_read_byte</STRONG> (Thumb, 64 bytes, Stack size 0 bytes, driver_sensor.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;driver_sensor_paw3204_read_data
</UL>

<P><STRONG><a name="[e3]"></a>driver_sensor_paw3204_read_data</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, driver_sensor.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;driver_sensor_paw3204_read_byte
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;driver_sensor_paw3204_send_byte
</UL>
<BR>[Called By]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;driver_sensor_check_up
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sensor_get_id
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;driver_sensor_paw3204_cpi_set_value
</UL>

<P><STRONG><a name="[e6]"></a>driver_sensor_paw3204_send_data</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, driver_sensor.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;driver_sensor_paw3204_send_byte
</UL>
<BR>[Called By]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;driver_sensor_paw3204_cpi_set_value
</UL>

<P><STRONG><a name="[e7]"></a>resync</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, driver_sensor.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_ms
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_set
</UL>
<BR>[Called By]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sensor_get_id
</UL>

<P><STRONG><a name="[e8]"></a>resync1</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, driver_sensor.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_us
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_set
</UL>

<P><STRONG><a name="[e9]"></a>driver_sensor_paw3204_cpi_set_value</STRONG> (Thumb, 106 bytes, Stack size 0 bytes, driver_sensor.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;driver_sensor_paw3204_send_data
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;driver_sensor_paw3204_read_data
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_us
</UL>

<P><STRONG><a name="[ea]"></a>app_sensor_get_id</STRONG> (Thumb, 64 bytes, Stack size 0 bytes, driver_sensor.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resync
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;driver_sensor_paw3204_read_data
</UL>

<P><STRONG><a name="[eb]"></a>app_sensor_init</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, driver_sensor.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;driver_sensor_paw3204_spi_init
</UL>
<BR>[Called By]<UL><LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_bind_result
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;application_page_mode
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;application_initial
</UL>

<P><STRONG><a name="[ec]"></a>app_sensor_3205_check</STRONG> (Thumb, 110 bytes, Stack size 0 bytes, driver_sensor.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sensor_check
</UL>

<P><STRONG><a name="[ed]"></a>app_sensor_check</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, driver_sensor.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sensor_3205_check
</UL>
<BR>[Called By]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;application_normal_mode
</UL>

<P><STRONG><a name="[ee]"></a>driver_sensor_check_up</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, driver_sensor.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;driver_sensor_paw3204_read_data
</UL>

<P><STRONG><a name="[117]"></a>app_sensor_powerdown</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, driver_sensor.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;application_PCBA_mode
</UL>

<P><STRONG><a name="[4b]"></a>f24Init</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, application_main.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetDataRate
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rf_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;application_initial
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_application_initial
</UL>

<P><STRONG><a name="[67]"></a>f24GetFreqConfigValue</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, application_main.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;application_page_mode
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_application_page_mode
</UL>

<P><STRONG><a name="[4a]"></a>fReadRFAddr</STRONG> (Thumb, 92 bytes, Stack size 0 bytes, application_main.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_read
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;application_initial
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_application_initial
</UL>

<P><STRONG><a name="[f1]"></a>application_initial</STRONG> (Thumb, 86 bytes, Stack size 0 bytes, application_main.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_Ctrl
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sensor_init
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_cb_register
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fReadRFAddr
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f24Init
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_Initial
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer0_Start
</UL>
<BR>[Called By]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fn24main
</UL>

<P><STRONG><a name="[f3]"></a>app_set_24page_timer</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, application_main.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_get_input
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fn24main
</UL>

<P><STRONG><a name="[f4]"></a>fWorkModeInit</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, application_main.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;general_dongle_search
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerUp_Rf
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;driver_rf_ouput_power_value_set
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SwitchToTxMode
</UL>
<BR>[Called By]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fn24main
</UL>

<P><STRONG><a name="[f7]"></a>fn24main</STRONG> (Thumb, 68 bytes, Stack size 0 bytes, application_main.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;application_test_mode
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;application_page_mode
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;application_normal_mode
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;application_PCBA_mode
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fWorkModeInit
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_set_24page_timer
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;application_initial
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xvr_reg_initial_24
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_printf
</UL>

<P><STRONG><a name="[fc]"></a>application_mouse_channel_search</STRONG> (Thumb, 96 bytes, Stack size 0 bytes, application_mode_normal.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;driver_rf_data_send
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;driver_rf_channel_switch
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_us
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;application_mouse_rf_send
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;application_normal_mode_initial
</UL>

<P><STRONG><a name="[ff]"></a>application_normal_mode_initial</STRONG> (Thumb, 116 bytes, Stack size 0 bytes, application_mode_normal.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;application_mouse_channel_search
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerUp_Rf
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SwitchToTxMode
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_printf
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_init
</UL>
<BR>[Called By]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;application_normal_mode
</UL>

<P><STRONG><a name="[111]"></a>application_mouse_status_check</STRONG> (Thumb, 200 bytes, Stack size 0 bytes, application_mode_normal.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;application_normal_mode
</UL>

<P><STRONG><a name="[100]"></a>application_mouse_rf_send_check</STRONG> (Thumb, 126 bytes, Stack size 0 bytes, application_mode_normal.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;driver_rf_maxRT_clear
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;application_mouse_rf_send_with_insistent_hop_16ch
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;application_mouse_rf_send
</UL>
<BR>[Called By]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;application_normal_mode
</UL>

<P><STRONG><a name="[f2]"></a>LED_Ctrl</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, application_mode_normal.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_set
</UL>
<BR>[Called By]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;application_mouse_led_start
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;application_page_mode
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;application_initial
</UL>

<P><STRONG><a name="[104]"></a>application_mouse_led_start</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, application_mode_normal.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_Ctrl
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;driver_delay_set_with_base_tick
</UL>
<BR>[Called By]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;application_mouse_sleep_check
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;application_test_mode
</UL>

<P><STRONG><a name="[106]"></a>application_mouse_sleep_check</STRONG> (Thumb, 172 bytes, Stack size 0 bytes, application_mode_normal.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;application_mouse_led_start
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;driver_delay_with_base_tick_expire_check
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;driver_delay_set_with_base_tick
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;application_normal_mode
</UL>

<P><STRONG><a name="[107]"></a>application_mouse_idle_oscxmhz</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, application_mode_normal.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cpu_idle_sleep
</UL>
<BR>[Called By]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;application_normal_mode
</UL>

<P><STRONG><a name="[109]"></a>application_mouse_wake_up_from_32khz</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, application_mode_normal.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerUp_Rf
</UL>

<P><STRONG><a name="[10a]"></a>application_mouse_idle_rc32khz</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, application_mode_normal.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AplUsb_IsConfigured
</UL>
<BR>[Called By]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;application_normal_mode
</UL>

<P><STRONG><a name="[10c]"></a>application_page_key_check</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, application_mode_normal.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;application_page_mode
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;application_normal_mode
</UL>

<P><STRONG><a name="[10d]"></a>LED_Toggle</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, application_mode_normal.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_set
</UL>
<BR>[Called By]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;application_mouse_led_process
</UL>

<P><STRONG><a name="[10e]"></a>application_mouse_led_process</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, application_mode_normal.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_Toggle
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;driver_delay_with_base_tick_expire_check
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;driver_delay_set_with_base_tick
</UL>
<BR>[Called By]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;application_test_mode
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;application_normal_mode
</UL>

<P><STRONG><a name="[10f]"></a>driver_lbd_process</STRONG> (Thumb, 218 bytes, Stack size 0 bytes, application_mode_normal.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_get_value
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;application_normal_mode
</UL>

<P><STRONG><a name="[f9]"></a>application_normal_mode</STRONG> (Thumb, 118 bytes, Stack size 0 bytes, application_mode_normal.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;driver_lbd_process
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;application_mouse_led_process
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;application_page_key_check
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;application_mouse_idle_rc32khz
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;application_mouse_idle_oscxmhz
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;application_mouse_sleep_check
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;application_mouse_rf_send_check
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;application_mouse_status_check
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;application_normal_mode_initial
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sensor_check
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mouse_key_check
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mouse_key_scan
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mouse_wheel_scan
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fn24main
</UL>

<P><STRONG><a name="[f6]"></a>general_dongle_search</STRONG> (Thumb, 178 bytes, Stack size 0 bytes, application_mode_normal.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;driver_rf_data_send
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;driver_rf_channel_switch
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_us
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcpy_2461
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;driver_rf_ouput_power_value_set
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fWorkModeInit
</UL>

<P><STRONG><a name="[fa]"></a>application_page_mode</STRONG> (Thumb, 712 bytes, Stack size 0 bytes, application_mode_page.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;application_page_key_check
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_Ctrl
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sensor_init
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_us
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcpy_2461
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write_some_data
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f24GetFreqConfigValue
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;driver_rf_receive_package
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;driver_rf_ouput_power_value_set
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;driver_rf_data_send_ACK
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SwitchToTxMode
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SwitchToRxMode
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_ms
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mouse_key_scan
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fn24main
</UL>

<P><STRONG><a name="[112]"></a>REC_OneByte</STRONG> (Thumb, 90 bytes, Stack size 0 bytes, application_mode_pcba.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_get_input
</UL>
<BR>[Called By]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;application_PCBA_mode
</UL>

<P><STRONG><a name="[113]"></a>pcba_test_init</STRONG> (Thumb, 114 bytes, Stack size 0 bytes, application_mode_pcba.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcpy_2461
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_config
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer0_Start
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SwitchToTxMode
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_set
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer0_Stop
</UL>
<BR>[Called By]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;application_PCBA_mode
</UL>

<P><STRONG><a name="[114]"></a>send_bind_result</STRONG> (Thumb, 126 bytes, Stack size 0 bytes, application_mode_pcba.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;driver_rf_data_send
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sensor_init
</UL>
<BR>[Called By]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;application_PCBA_mode
</UL>

<P><STRONG><a name="[f8]"></a>application_PCBA_mode</STRONG> (Thumb, 358 bytes, Stack size 0 bytes, application_mode_pcba.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;driver_rf_mode_single_wave
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerDown_Rf
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_bind_result
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcba_test_init
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;REC_OneByte
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetDataRate
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rf_Init
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerUp_Rf
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sensor_powerdown
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_deinit
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt_disable
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cpu_reduce_voltage_sleep
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_us
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SwitchToTxMode
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_ms
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_set
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer0_Stop
<LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gpio_sleep
</UL>
<BR>[Called By]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fn24main
</UL>

<P><STRONG><a name="[116]"></a>driver_rf_mode_single_wave</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, application_mode_test.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;application_test_mode
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;application_PCBA_mode
</UL>

<P><STRONG><a name="[fb]"></a>application_test_mode</STRONG> (Thumb, 576 bytes, Stack size 0 bytes, application_mode_test.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;driver_rf_data_send_noACK
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;driver_rf_mode_single_wave
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerDown_Rf
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;application_mouse_led_process
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;application_mouse_led_start
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetDataRate
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rf_Init
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerUp_Rf
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt_disable
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_us
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;driver_rf_ouput_power_value_set
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SwitchToTxMode
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SwitchToRxMode
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mouse_key_scan
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fn24main
</UL>

<P><STRONG><a name="[11a]"></a>application_mouse_rf_synchronize</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, application_rf.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;application_mouse_rf_send_with_insistent_hop_16ch
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;application_mouse_rf_send
</UL>

<P><STRONG><a name="[102]"></a>application_mouse_rf_send_with_insistent_hop_16ch</STRONG> (Thumb, 110 bytes, Stack size 0 bytes, application_rf.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;driver_rf_data_retrans
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;application_mouse_rf_synchronize
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;driver_rf_data_send
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;driver_rf_channel_switch
</UL>
<BR>[Called By]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;application_mouse_rf_send
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;application_mouse_rf_send_check
</UL>

<P><STRONG><a name="[11c]"></a>application_mouse_rf_send_start</STRONG> (Thumb, 100 bytes, Stack size 0 bytes, application_rf.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;driver_rf_data_retrans
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;driver_rf_maxRT_clear
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;driver_rf_data_send
</UL>
<BR>[Called By]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;application_mouse_rf_send
</UL>

<P><STRONG><a name="[101]"></a>application_mouse_rf_send</STRONG> (Thumb, 314 bytes, Stack size 0 bytes, application_rf.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;application_mouse_rf_send_start
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;application_mouse_rf_synchronize
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;driver_rf_channel_switch
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;application_mouse_rf_send_with_insistent_hop_16ch
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;application_mouse_channel_search
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_us
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_get_input
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;application_mouse_rf_send_check
</UL>

<P><STRONG><a name="[f5]"></a>PowerUp_Rf</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, driver_rf.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;driver_rf_data_retrans
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;driver_rf_data_send
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;application_mouse_wake_up_from_32khz
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;application_normal_mode_initial
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;application_test_mode
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;application_PCBA_mode
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fWorkModeInit
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;driver_rf_data_send_ACK
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SwitchToTxMode
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SwitchToRxMode
</UL>

<P><STRONG><a name="[118]"></a>PowerDown_Rf</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, driver_rf.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;driver_rf_data_retrans
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;driver_rf_data_send
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;application_test_mode
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;application_PCBA_mode
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rf_Init
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;driver_rf_data_send_ACK
</UL>

<P><STRONG><a name="[59]"></a>SwitchToRxMode</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, driver_rf.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerUp_Rf
</UL>
<BR>[Called By]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;application_test_mode
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;application_page_mode
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_application_page_mode
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_rf_receive_page_set
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_application_normal_mode
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mouse_send
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_action
</UL>

<P><STRONG><a name="[53]"></a>SwitchToTxMode</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, driver_rf.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerUp_Rf
</UL>
<BR>[Called By]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcba_test_init
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;application_normal_mode_initial
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;application_test_mode
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;application_page_mode
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;application_PCBA_mode
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fWorkModeInit
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_application_page_mode
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_application_normal_mode
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mouse_send
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_action
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_rf_receive_set
</UL>

<P><STRONG><a name="[51]"></a>memcpy_2461</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, driver_rf.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChangeTxPipe
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcba_test_init
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;general_dongle_search
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;application_page_mode
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rf_Init
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_application_page_mode
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_rf_receive_set
</UL>

<P><STRONG><a name="[11d]"></a>ChangeTxPipe</STRONG> (Thumb, 160 bytes, Stack size 0 bytes, driver_rf.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8 (via BLX)
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcpy_2461
</UL>

<P><STRONG><a name="[56]"></a>R_RX_PAYLOAD</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, driver_rf.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;driver_rf_data_send
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;driver_rf_receive_package
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_rf_receive_package
</UL>

<P><STRONG><a name="[11e]"></a>W_TX_PAYLOAD</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, driver_rf.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;driver_rf_data_send
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;driver_rf_data_send_ACK
</UL>

<P><STRONG><a name="[11f]"></a>W_TX_PAYLOAD_NOACK</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, driver_rf.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;driver_rf_data_send_noACK
</UL>

<P><STRONG><a name="[ef]"></a>Rf_Init</STRONG> (Thumb, 172 bytes, Stack size 0 bytes, driver_rf.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerDown_Rf
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcpy_2461
</UL>
<BR>[Called By]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;application_test_mode
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;application_PCBA_mode
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f24Init
</UL>

<P><STRONG><a name="[f0]"></a>SetDataRate</STRONG> (Thumb, 144 bytes, Stack size 0 bytes, driver_rf.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;application_test_mode
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;application_PCBA_mode
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f24Init
</UL>

<P><STRONG><a name="[fd]"></a>driver_rf_channel_switch</STRONG> (Thumb, 90 bytes, Stack size 0 bytes, driver_rf.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;application_mouse_rf_send_with_insistent_hop_16ch
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;application_mouse_rf_send
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;application_mouse_channel_search
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;general_dongle_search
</UL>

<P><STRONG><a name="[fe]"></a>driver_rf_data_send</STRONG> (Thumb, 284 bytes, Stack size 0 bytes, driver_rf.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W_TX_PAYLOAD
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerDown_Rf
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerUp_Rf
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_us
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;R_RX_PAYLOAD
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;driver_timer0_reset
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;application_mouse_rf_send_start
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_bind_result
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;application_mouse_rf_send_with_insistent_hop_16ch
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;application_mouse_channel_search
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;general_dongle_search
</UL>

<P><STRONG><a name="[11b]"></a>driver_rf_data_retrans</STRONG> (Thumb, 158 bytes, Stack size 0 bytes, driver_rf.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerDown_Rf
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerUp_Rf
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_us
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;driver_timer0_reset
</UL>
<BR>[Called By]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;application_mouse_rf_send_start
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;application_mouse_rf_send_with_insistent_hop_16ch
</UL>

<P><STRONG><a name="[103]"></a>driver_rf_maxRT_clear</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, driver_rf.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;application_mouse_rf_send_start
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;application_mouse_rf_send_check
</UL>

<P><STRONG><a name="[119]"></a>driver_rf_data_send_noACK</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, driver_rf.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W_TX_PAYLOAD_NOACK
</UL>
<BR>[Called By]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;application_test_mode
</UL>

<P><STRONG><a name="[58]"></a>driver_rf_data_send_ACK</STRONG> (Thumb, 124 bytes, Stack size 0 bytes, driver_rf.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W_TX_PAYLOAD
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerDown_Rf
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerUp_Rf
</UL>
<BR>[Called By]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;application_page_mode
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_application_page_mode
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_application_normal_mode
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mouse_send
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_action
</UL>

<P><STRONG><a name="[65]"></a>driver_rf_receive_package</STRONG> (Thumb, 76 bytes, Stack size 0 bytes, driver_rf.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;R_RX_PAYLOAD
</UL>
<BR>[Called By]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;application_page_mode
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_application_page_mode
</UL>

<P><STRONG><a name="[52]"></a>driver_rf_ouput_power_value_set</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, driver_rf.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;general_dongle_search
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;application_test_mode
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;application_page_mode
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fWorkModeInit
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_application_page_mode
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_rf_receive_page_set
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_rf_receive_set
</UL>

<P><STRONG><a name="[12d]"></a>DelayNops_usb</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, driver_usb.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;URB_SET_ADDRESS
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_init
</UL>

<P><STRONG><a name="[12b]"></a>HwUsb_SetRxIE</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, driver_usb.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_init
</UL>

<P><STRONG><a name="[13b]"></a>HwUsb_GetRxIF</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, driver_usb.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_InterruptHandler
</UL>

<P><STRONG><a name="[12c]"></a>HwUsb_SetTxIE</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, driver_usb.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_init
</UL>

<P><STRONG><a name="[13a]"></a>HwUsb_GetTxIF</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, driver_usb.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_InterruptHandler
</UL>

<P><STRONG><a name="[142]"></a>HwUsb_Switch2Endp</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, driver_usb.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_config_endp
</UL>

<P><STRONG><a name="[12f]"></a>HwUsb_GetCSR</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, driver_usb.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ep0_isr
</UL>

<P><STRONG><a name="[121]"></a>HwUsb_GetRxCount</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, driver_usb.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HwUsb_EndpRead
</UL>

<P><STRONG><a name="[120]"></a>HwUsb_EndpRead</STRONG> (Thumb, 116 bytes, Stack size 0 bytes, driver_usb.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HwUsb_GetRxCount
</UL>
<BR>[Called By]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_endp_rx
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ep0_isr
</UL>

<P><STRONG><a name="[122]"></a>HwUsb_EndpWrite</STRONG> (Thumb, 78 bytes, Stack size 0 bytes, driver_usb.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AplUsb_StartTx
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HwUsb_SendPkt
</UL>

<P><STRONG><a name="[147]"></a>HwUsb_SendStall</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, driver_usb.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalUsbClassRequest
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;URB_SET_INTERFACE
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;URB_GET_INTERFACE
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;URB_GET_DESCRIPTOR
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;URB_GET_STATUS
<LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;URB_NOT_SUPPORT
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalUsbSetupHandle
</UL>

<P><STRONG><a name="[125]"></a>HwUsb_SendZlp</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, driver_usb.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalUsbClassRequest
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;URB_SET_INTERFACE
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;URB_SET_CONFIGURATION
<LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;URB_SET_ADDRESS
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;URB_SET_FEATURE
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;URB_CLEAR_FEATURE
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HwUsb_SendPkt
</UL>

<P><STRONG><a name="[123]"></a>HwUsb_SendPkt</STRONG> (Thumb, 124 bytes, Stack size 0 bytes, driver_usb.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HwUsb_SendZlp
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HwUsb_EndpWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;URB_GET_INTERFACE
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;URB_GET_CONFIGURATION
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;URB_GET_DESCRIPTOR
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;URB_GET_STATUS
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ep0_isr
</UL>

<P><STRONG><a name="[127]"></a>AplUsb_StartTx</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, driver_usb.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HwUsb_EndpWrite
</UL>

<P><STRONG><a name="[149]"></a>HwUsb_SetAddress</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, driver_usb.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;URB_SET_ADDRESS
</UL>

<P><STRONG><a name="[128]"></a>usb_init_sw</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, driver_usb.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HwUsbOpen
</UL>
<BR>[Called By]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_init
</UL>

<P><STRONG><a name="[12a]"></a>usb_init</STRONG> (Thumb, 124 bytes, Stack size 0 bytes, driver_usb.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_init_sw
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HwUsb_SetTxIE
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HwUsb_SetRxIE
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayNops_usb
</UL>

<P><STRONG><a name="[12e]"></a>_ep0_isr</STRONG> (Thumb, 86 bytes, Stack size 0 bytes, driver_usb.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalUsbSetupHandle
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HwUsb_SendPkt
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HwUsb_EndpRead
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HwUsb_GetCSR
</UL>
<BR>[Called By]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_IsrDispatch
</UL>

<P><STRONG><a name="[132]"></a>_endp_tx</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, driver_usb.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AplUsb_GetTxCbk
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AplUsb_GetTxBuf
</UL>
<BR>[Called By]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;URB_SET_INTERFACE
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_IsrDispatch
</UL>

<P><STRONG><a name="[135]"></a>_endp_rx</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, driver_usb.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AplUsb_GetRxCbk
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AplUsb_GetRxBuf
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HwUsb_EndpRead
</UL>
<BR>[Called By]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_IsrDispatch
</UL>

<P><STRONG><a name="[138]"></a>USB_IsrDispatch</STRONG> (Thumb, 98 bytes, Stack size 0 bytes, driver_usb.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_endp_rx
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_endp_tx
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ep0_isr
</UL>
<BR>[Called By]<UL><LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_InterruptHandler
</UL>

<P><STRONG><a name="[139]"></a>USB_InterruptHandler</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, driver_usb.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_IsrDispatch
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HwUsb_GetTxIF
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HwUsb_GetRxIF
</UL>

<P><STRONG><a name="[141]"></a>_find_tarDesc</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, usb.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_config_endp
</UL>

<P><STRONG><a name="[14a]"></a>_find_HidClassRpt</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, usb.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;URB_GET_DESCRIPTOR
</UL>

<P><STRONG><a name="[136]"></a>AplUsb_GetRxBuf</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, usb.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_endp_rx
</UL>

<P><STRONG><a name="[133]"></a>AplUsb_GetTxBuf</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, usb.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_endp_tx
</UL>

<P><STRONG><a name="[134]"></a>AplUsb_GetTxCbk</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, usb.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_endp_tx
</UL>

<P><STRONG><a name="[137]"></a>AplUsb_GetRxCbk</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, usb.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_endp_rx
</UL>

<P><STRONG><a name="[10b]"></a>AplUsb_IsConfigured</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, usb.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;application_mouse_idle_rc32khz
</UL>

<P><STRONG><a name="[13c]"></a>_build_pipRxBuf</STRONG> (Thumb, 66 bytes, Stack size 0 bytes, usb.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_config_endp
</UL>

<P><STRONG><a name="[13f]"></a>_build_pipTxBuf</STRONG> (Thumb, 64 bytes, Stack size 0 bytes, usb.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_config_endp
</UL>

<P><STRONG><a name="[140]"></a>_config_endp</STRONG> (Thumb, 342 bytes, Stack size 0 bytes, usb.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_build_pipTxBuf
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_build_pipRxBuf
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_find_tarDesc
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HwUsb_Switch2Endp
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;URB_SET_CONFIGURATION
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_device
</UL>

<P><STRONG><a name="[143]"></a>config_device</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, usb.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDesc_GetConfigDesc
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_config_endp
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_printf
</UL>

<P><STRONG><a name="[146]"></a>HalUsbAttributeInit</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, usb.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HwUsbOpen
</UL>

<P><STRONG><a name="[129]"></a>HwUsbOpen</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, usb.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDesc_GetDeviceDesc
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalUsbAttributeInit
</UL>
<BR>[Called By]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_init_sw
</UL>

<P><STRONG><a name="[11]"></a>URB_NOT_SUPPORT</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, usb.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HwUsb_SendStall
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usb.o(.constdata)
</UL>
<P><STRONG><a name="[155]"></a>GetRqtRecipient</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, usb.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalUsbClassRequest
</UL>

<P><STRONG><a name="[14d]"></a>GetRqtType</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, usb.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalUsbSetupHandle
</UL>

<P><STRONG><a name="[f]"></a>URB_GET_STATUS</STRONG> (Thumb, 92 bytes, Stack size 0 bytes, usb.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetTxParameter
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HwUsb_SendPkt
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HwUsb_SendStall
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usb.o(.constdata)
</UL>
<P><STRONG><a name="[10]"></a>URB_CLEAR_FEATURE</STRONG> (Thumb, 94 bytes, Stack size 0 bytes, usb.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HwUsb_SendZlp
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usb.o(.constdata)
</UL>
<P><STRONG><a name="[12]"></a>URB_SET_FEATURE</STRONG> (Thumb, 388 bytes, Stack size 0 bytes, usb.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HwUsb_SendZlp
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usb.o(.constdata)
</UL>
<P><STRONG><a name="[13]"></a>URB_SET_ADDRESS</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, usb.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HwUsb_SetAddress
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HwUsb_SendZlp
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayNops_usb
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usb.o(.constdata)
</UL>
<P><STRONG><a name="[14]"></a>URB_GET_DESCRIPTOR</STRONG> (Thumb, 216 bytes, Stack size 0 bytes, usb.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDesc_GetStringDesc
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDesc_GetHidRptDesc
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDesc_GetDeviceDesc
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDesc_GetConfigDesc
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_find_HidClassRpt
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetTxParameter
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HwUsb_SendPkt
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HwUsb_SendStall
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usb.o(.constdata)
</UL>
<P><STRONG><a name="[15]"></a>URB_GET_CONFIGURATION</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, usb.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetTxParameter
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HwUsb_SendPkt
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usb.o(.constdata)
</UL>
<P><STRONG><a name="[16]"></a>URB_SET_CONFIGURATION</STRONG> (Thumb, 80 bytes, Stack size 0 bytes, usb.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDesc_GetConfigDesc
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_config_endp
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HwUsb_SendZlp
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usb.o(.constdata)
</UL>
<P><STRONG><a name="[17]"></a>URB_GET_INTERFACE</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, usb.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetTxParameter
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HwUsb_SendPkt
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HwUsb_SendStall
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usb.o(.constdata)
</UL>
<P><STRONG><a name="[18]"></a>URB_SET_INTERFACE</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, usb.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_endp_tx
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HwUsb_SendZlp
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HwUsb_SendStall
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usb.o(.constdata)
</UL>
<P><STRONG><a name="[14e]"></a>HalUsbStandardRequest</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, usb.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalUsbSetupHandle
</UL>

<P><STRONG><a name="[131]"></a>HalUsbSetupHandle</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, usb.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalUsbClassRequest
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalUsbStandardRequest
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRqtType
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HwUsb_SendStall
</UL>
<BR>[Called By]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ep0_isr
</UL>

<P><STRONG><a name="[150]"></a>check_usb_suspendmode</STRONG> (Thumb, 86 bytes, Stack size 0 bytes, usb.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_printf
</UL>

<P><STRONG><a name="[151]"></a>usb_suspend_wakeup</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, usb.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_ms
</UL>

<P><STRONG><a name="[145]"></a>USBDesc_GetDeviceDesc</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, usb_desc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;URB_GET_DESCRIPTOR
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HwUsbOpen
</UL>

<P><STRONG><a name="[144]"></a>USBDesc_GetConfigDesc</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, usb_desc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;URB_SET_CONFIGURATION
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;URB_GET_DESCRIPTOR
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_device
</UL>

<P><STRONG><a name="[153]"></a>UsbDesc_Find</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, usb_desc.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
</UL>
<BR>[Called By]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDesc_GetStringDesc
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDesc_GetHidRptDesc
</UL>

<P><STRONG><a name="[14b]"></a>USBDesc_GetHidRptDesc</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, usb_desc.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsbDesc_Find
</UL>
<BR>[Called By]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;URB_GET_DESCRIPTOR
</UL>

<P><STRONG><a name="[14c]"></a>USBDesc_GetStringDesc</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, usb_desc.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsbDesc_Find
</UL>
<BR>[Called By]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;URB_GET_DESCRIPTOR
</UL>

<P><STRONG><a name="[154]"></a>SetRxParameter</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, usbclass.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4
</UL>

<P><STRONG><a name="[14f]"></a>HalUsbClassRequest</STRONG> (Thumb, 68 bytes, Stack size 0 bytes, usbclass.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRqtRecipient
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HwUsb_SendZlp
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HwUsb_SendStall
</UL>
<BR>[Called By]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalUsbSetupHandle
</UL>

<P><STRONG><a name="[5c]"></a>__aeabi_uidivmod</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, uidiv.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer1_ReStart
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer1_Start
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_init
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calib_adc
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF250_calibration
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmod_calibration
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_init
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer0_Start
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jump_frequency
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer0_1m5_Start
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_init
</UL>

<P><STRONG><a name="[82]"></a>__aeabi_idivmod</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, idiv.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_filter
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;common_cos_val_calculate
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;common_sin_val_calculate
</UL>

<P><STRONG><a name="[47]"></a>__aeabi_memcpy</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, memcpya.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;URB_SET_ADDRESS
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HwUsb_EndpWrite
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HwUsb_EndpRead
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_rx_cmd_respone
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_rx_cmd_respone
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_write
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_read
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write_some_data
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_application_normal_mode
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_aes_test
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_aes_encrypt
</UL>

<P><STRONG><a name="[130]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ep0_isr
</UL>

<P><STRONG><a name="[156]"></a>__aeabi_memset</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset$wrapper
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[c8]"></a>__aeabi_memclr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_init_sw
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;application_mouse_rf_send
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;application_normal_mode_initial
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_uart2_buffer
</UL>

<P><STRONG><a name="[aa]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HwUsbOpen
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;application_initial
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write_data
</UL>

<P><STRONG><a name="[157]"></a>_memset$wrapper</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[124]"></a>__aeabi_uread4</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, uread4.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsbDesc_Find
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_usb_suspendmode
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;URB_SET_CONFIGURATION
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;URB_GET_DESCRIPTOR
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_device
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HwUsbOpen
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HwUsb_SendPkt
</UL>

<P><STRONG><a name="[126]"></a>__aeabi_uwrite4</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, uwrite4.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetRxParameter
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_suspend_wakeup
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_usb_suspendmode
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetTxParameter
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HwUsb_SendPkt
</UL>

<P><STRONG><a name="[80]"></a>__aeabi_fadd</STRONG> (Thumb, 166 bytes, Stack size 0 bytes, fadd.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_round
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan2f (via BLX)
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;asinf (via BLX)
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_frsub
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calculate_acc_angle
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;algorithm
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kalmanFilter
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calculate_displacement
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_flt_infnan2 (via Veneer)
</UL>

<P><STRONG><a name="[90]"></a>__aeabi_fsub</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, fadd.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan2f (via BLX)
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calculate_acc_angle
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;algorithm
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kalmanFilter
</UL>

<P><STRONG><a name="[8e]"></a>__aeabi_frsub</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, fadd.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan2f (via BLX)
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;asinf (via BLX)
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;algorithm
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;invSqrt
</UL>

<P><STRONG><a name="[7f]"></a>__aeabi_fmul</STRONG> (Thumb, 124 bytes, Stack size 0 bytes, fmul.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan2f (via BLX)
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;asinf (via BLX)
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calculate_acc_angle
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;algorithm
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kalmanFilter
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rotate_point
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calculate_displacement
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;invSqrt
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mouse
</UL>

<P><STRONG><a name="[7d]"></a>__aeabi_fdiv</STRONG> (Thumb, 124 bytes, Stack size 0 bytes, fdiv.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_round
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan2f (via BLX)
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kalmanFilter
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;raw_to_physical
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_flt_invalid (via Veneer)
</UL>

<P><STRONG><a name="[7c]"></a>__ARM_scalbnf</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, fscalb.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;asinf (via BLX)
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;algorithm
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;raw_to_physical
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;invSqrt
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_flt_underflow (via Veneer)
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_flt_infnan (via Veneer)
</UL>

<P><STRONG><a name="[89]"></a>__aeabi_dadd</STRONG> (Thumb, 328 bytes, Stack size 0 bytes, dadd.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_lasr
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;algorithm
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rotate_point
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mouse
</UL>

<P><STRONG><a name="[87]"></a>__aeabi_dsub</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, dadd.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rotate_point
</UL>

<P><STRONG><a name="[9a]"></a>__aeabi_drsub</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, dadd.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mouse
</UL>

<P><STRONG><a name="[92]"></a>__aeabi_dmul</STRONG> (Thumb, 202 bytes, Stack size 0 bytes, dmul.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_low_volt_sleep
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;algorithm
</UL>

<P><STRONG><a name="[5f]"></a>__aeabi_ddiv</STRONG> (Thumb, 234 bytes, Stack size 0 bytes, ddiv.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rotate_point
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mouse
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;receive_action
</UL>

<P><STRONG><a name="[c3]"></a>__ARM_scalbn</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, dscalb.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_low_volt_sleep
</UL>

<P><STRONG><a name="[7b]"></a>__aeabi_i2f</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, fflti.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rotate_point
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;raw_to_physical
</UL>

<P><STRONG><a name="[97]"></a>__aeabi_ui2f</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, ffltui.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mouse
</UL>

<P><STRONG><a name="[99]"></a>__aeabi_i2d</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, dflti.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mouse
</UL>

<P><STRONG><a name="[5e]"></a>__aeabi_ui2d</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, dfltui.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_low_volt_sleep
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;receive_action
</UL>

<P><STRONG><a name="[85]"></a>__aeabi_f2iz</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, ffixi.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calculate_acc_angle
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;algorithm
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rotate_point
</UL>

<P><STRONG><a name="[98]"></a>__aeabi_d2iz</STRONG> (Thumb, 62 bytes, Stack size 0 bytes, dfixi.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mouse
</UL>

<P><STRONG><a name="[c4]"></a>__aeabi_d2uiz</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, dfixui.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_low_volt_sleep
</UL>

<P><STRONG><a name="[86]"></a>__aeabi_f2d</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, f2d.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;algorithm
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rotate_point
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mouse
</UL>

<P><STRONG><a name="[88]"></a>__aeabi_d2f</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, d2f.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_round
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;algorithm
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rotate_point
</UL>

<P><STRONG><a name="[15f]"></a>__aeabi_uldivmod</STRONG> (Thumb, 96 bytes, Stack size 0 bytes, uldiv.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[15a]"></a>__aeabi_llsl</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, llshl.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>

<P><STRONG><a name="[15e]"></a>__aeabi_llsr</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, llushr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>

<P><STRONG><a name="[15b]"></a>__aeabi_lasr</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, llsshr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[159]"></a>_float_round</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, fepilogue.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fsqrt
</UL>

<P><STRONG><a name="[158]"></a>_float_epilogue</STRONG> (Thumb, 88 bytes, Stack size 0 bytes, fepilogue.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_clz (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>

<P><STRONG><a name="[15d]"></a>_double_round</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, depilogue.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
</UL>

<P><STRONG><a name="[15c]"></a>_double_epilogue</STRONG> (Thumb, 164 bytes, Stack size 0 bytes, depilogue.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_clz (via BLX)
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
</UL>

<P><STRONG><a name="[161]"></a>__aeabi_d2ulz</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, dfixul.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[16b]"></a>__aeabi_cdrcmple</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, cdrcmple.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[20]"></a>__scatterload</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload (via BLX)
</UL>

<P><STRONG><a name="[163]"></a>_fsqrt</STRONG> (Thumb, 88 bytes, Stack size 0 bytes, fsqrt.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_round
</UL>
<BR>[Called By]<UL><LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrtf (via BLX)
</UL>

<P><STRONG><a name="[164]"></a>__0vsprintf</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, printfa.o(i.__0vsprintf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sputc
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[ca]"></a>vsprintf</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, printfa.o(i.__0vsprintf))
<BR><BR>[Called By]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf_dut
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_printf
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_printf
</UL>

<P><STRONG><a name="[160]"></a>__ARM_clz</STRONG> (ARM, 8 bytes, Stack size 0 bytes, fepilogue.o(i.__ARM_clz))
<BR><BR>[Called By]<UL><LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue (via BLX)
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_epilogue (via BLX)
</UL>

<P><STRONG><a name="[23]"></a>__ARM_common_disable_fiq</STRONG> (ARM, 20 bytes, Stack size 0 bytes, main.o(i.__ARM_common_disable_fiq))
<BR><BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write_data (via BLX)
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_erase_sector (via BLX)
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_read_data (via BLX)
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_reset (via BLX)
</UL>

<P><STRONG><a name="[24]"></a>__ARM_common_disable_irq</STRONG> (ARM, 20 bytes, Stack size 0 bytes, main.o(i.__ARM_common_disable_irq))
<BR><BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write_data (via BLX)
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_erase_sector (via BLX)
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_read_data (via BLX)
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_reset (via BLX)
</UL>

<P><STRONG><a name="[2f]"></a>__ARM_common_enable_fiq</STRONG> (ARM, 16 bytes, Stack size 0 bytes, main.o(i.__ARM_common_enable_fiq))
<BR><BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write_data (via BLX)
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_erase_sector (via BLX)
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_read_data (via BLX)
<LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main (via BLX)
</UL>

<P><STRONG><a name="[30]"></a>__ARM_common_enable_irq</STRONG> (ARM, 16 bytes, Stack size 0 bytes, main.o(i.__ARM_common_enable_irq))
<BR><BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write_data (via BLX)
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_erase_sector (via BLX)
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_read_data (via BLX)
<LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main (via BLX)
</UL>

<P><STRONG><a name="[6e]"></a>__ARM_common_switch8</STRONG> (ARM, 24 bytes, Stack size 0 bytes, app_key.o(i.__ARM_common_switch8))
<BR><BR>[Called By]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChangeTxPipe (via BLX)
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_rx_handler (via BLX)
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_rx_handler (via BLX)
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_short_release_handler (via BLX)
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_long_release_handler (via BLX)
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_long_press_handler (via BLX)
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_short_press_handler (via BLX)
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cpu_wakeup (via BLX)
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_clk_switch (via BLX)
</UL>

<P><STRONG><a name="[16f]"></a>__ARM_fpclassifyf</STRONG> (ARM, 44 bytes, Stack size 0 bytes, fpclassifyf.o(i.__ARM_fpclassifyf))
<BR><BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan2f
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;asinf
</UL>

<P><STRONG><a name="[13d]"></a>free</STRONG> (Thumb, 80 bytes, Stack size 0 bytes, malloc2.o(i.__free$2region))
<BR><BR>[Called By]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_build_pipTxBuf
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_build_pipRxBuf
</UL>

<P><STRONG><a name="[13e]"></a>malloc</STRONG> (Thumb, 92 bytes, Stack size 0 bytes, malloc2.o(i.__malloc$2region))
<BR><BR>[Called By]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_build_pipTxBuf
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_build_pipRxBuf
</UL>

<P><STRONG><a name="[166]"></a>__mathlib_flt_infnan</STRONG> (ARM, 8 bytes, Stack size 0 bytes, funder.o(i.__mathlib_flt_infnan))
<BR><BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbnf (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;asinf
</UL>

<P><STRONG><a name="[167]"></a>__mathlib_flt_infnan2</STRONG> (ARM, 4 bytes, Stack size 0 bytes, funder.o(i.__mathlib_flt_infnan2))
<BR><BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan2f
</UL>

<P><STRONG><a name="[168]"></a>__mathlib_flt_invalid</STRONG> (ARM, 12 bytes, Stack size 0 bytes, funder.o(i.__mathlib_flt_invalid))
<BR><BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;asinf
</UL>

<P><STRONG><a name="[169]"></a>__mathlib_flt_underflow</STRONG> (ARM, 12 bytes, Stack size 0 bytes, funder.o(i.__mathlib_flt_underflow))
<BR><BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbnf (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan2f
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;asinf
</UL>

<P><STRONG><a name="[170]"></a>__set_errno</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, errno.o(i.__set_errno))
<BR><BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;asinf (via BLX)
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrtf (via Veneer)
</UL>

<P><STRONG><a name="[93]"></a>asinf</STRONG> (ARM, 324 bytes, Stack size 0 bytes, asinf.o(i.asinf))
<BR><BR>[Calls]<UL><LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_fpclassifyf
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_frsub (via BLX)
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul (via BLX)
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd (via BLX)
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbnf (via BLX)
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno (via BLX)
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrtf
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_flt_underflow
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_flt_invalid
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_flt_infnan
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;algorithm (via BLX)
</UL>

<P><STRONG><a name="[94]"></a>atan2f</STRONG> (ARM, 704 bytes, Stack size 0 bytes, atan2f.o(i.atan2f))
<BR><BR>[Calls]<UL><LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_fpclassifyf
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub (via BLX)
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_frsub (via BLX)
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul (via BLX)
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv (via BLX)
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd (via BLX)
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_flt_underflow
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_flt_infnan2
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;algorithm (via BLX)
</UL>

<P><STRONG><a name="[16e]"></a>sqrtf</STRONG> (ARM, 64 bytes, Stack size 0 bytes, sqrtf.o(i.sqrtf))
<BR><BR>[Calls]<UL><LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno (via Veneer)
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fsqrt (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;asinf
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[1]"></a>Undefined</STRONG> (ARM, 0 bytes, Stack size 0 bytes, vectors.o(SYS_BOOT))
<BR><BR>[Calls]<UL><LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Undefined_Exception (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> vectors.o(SYS_BOOT)
</UL>
<P><STRONG><a name="[2]"></a>SoftwareInterrupt</STRONG> (ARM, 0 bytes, Stack size 0 bytes, vectors.o(SYS_BOOT))
<BR><BR>[Calls]<UL><LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoftwareInterrupt_Exception (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> vectors.o(SYS_BOOT)
</UL>
<P><STRONG><a name="[3]"></a>PrefetchAbort</STRONG> (ARM, 0 bytes, Stack size 0 bytes, vectors.o(SYS_BOOT))
<BR><BR>[Calls]<UL><LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrefetchAbort_Exception (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> vectors.o(SYS_BOOT)
</UL>
<P><STRONG><a name="[4]"></a>DataAbort</STRONG> (ARM, 0 bytes, Stack size 0 bytes, vectors.o(SYS_BOOT))
<BR><BR>[Calls]<UL><LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataAbort_Exception (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> vectors.o(SYS_BOOT)
</UL>
<P><STRONG><a name="[6]"></a>IRQ_Handler</STRONG> (ARM, 0 bytes, Stack size 0 bytes, vectors.o(SYS_BOOT))
<BR><BR>[Calls]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSirq_IRQ_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> vectors.o(SYS_BOOT)
</UL>
<P><STRONG><a name="[5]"></a>sys_reserved</STRONG> (ARM, 0 bytes, Stack size 0 bytes, vectors.o(SYS_BOOT))
<BR><BR>[Calls]<UL><LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Reserved_Exception (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> vectors.o(SYS_BOOT)
</UL>
<P><STRONG><a name="[7]"></a>FIQ_Handler</STRONG> (ARM, 0 bytes, Stack size 0 bytes, vectors.o(SYS_BOOT))
<BR><BR>[Calls]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSirq_FIQ_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> vectors.o(SYS_BOOT)
</UL>
<P><STRONG><a name="[8d]"></a>invSqrt</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, app_gyroscope.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_frsub
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbnf
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;algorithm
</UL>

<P><STRONG><a name="[da]"></a>i2c_send_start</STRONG> (Thumb, 90 bytes, Stack size 0 bytes, i2c.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_send_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_write
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_read
</UL>

<P><STRONG><a name="[dc]"></a>i2c_msg_init</STRONG> (Thumb, 84 bytes, Stack size 0 bytes, i2c.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_msg_reset
</UL>
<BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_write
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_read
</UL>

<P><STRONG><a name="[dd]"></a>i2c_msg_reset</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, i2c.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_msg_init
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_write
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_read
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_init
</UL>

<P><STRONG><a name="[de]"></a>is_i2c_busy</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, i2c.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_write
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_read
</UL>

<P><STRONG><a name="[db]"></a>i2c_send_addr</STRONG> (Thumb, 94 bytes, Stack size 0 bytes, i2c.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_send_start
</UL>

<P><STRONG><a name="[df]"></a>i2c_get_last_msg</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, i2c.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_read
</UL>

<P><STRONG><a name="[148]"></a>SetTxParameter</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, usb.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4
</UL>
<BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;URB_GET_INTERFACE
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;URB_GET_CONFIGURATION
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;URB_GET_DESCRIPTOR
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;URB_GET_STATUS
</UL>

<P><STRONG><a name="[16a]"></a>_fp_digits</STRONG> (Thumb, 344 bytes, Stack size 0 bytes, printfa.o(i._fp_digits), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[165]"></a>_printf_core</STRONG> (Thumb, 1764 bytes, Stack size 0 bytes, printfa.o(i._printf_core), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0vsprintf
</UL>

<P><STRONG><a name="[16d]"></a>_printf_post_padding</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, printfa.o(i._printf_post_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[16c]"></a>_printf_pre_padding</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, printfa.o(i._printf_pre_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[e]"></a>_sputc</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, printfa.o(i._sputc))
<BR><BR>[Called By]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0vsprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> printfa.o(i.__0vsprintf)
</UL><P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
